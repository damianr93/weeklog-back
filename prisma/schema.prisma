generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum Role {
  ADMIN
  OPERATOR
  DRIVER
  CLIENT
}

enum ProjectionStatus {
  DRAFT
  ACTIVE
  COMPLETED
  CANCELLED
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  role     Role

  plantId Int? 
  plant   Plant? @relation(fields: [plantId], references: [id])

  createdProjections Projection[] @relation("ProjectionCreator")
  createdAt          DateTime     @default(now())
}

model Plant {
  id   Int    @id @default(autoincrement())
  name String
  lat  Float
  lng  Float

  users       User[]
  drivers     Driver[]
  trips       Trip[]
  products    Product[]
  projections Projection[]

  createdAt DateTime @default(now())
}

model Client {
  id       Int    @id @default(autoincrement())
  name     String
  lat      Float?
  lng      Float?
  distance Int?

  trips     Trip[]
  products  Product[]
  createdAt DateTime  @default(now())
}

model Driver {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  phone     String

  plantId Int?
  plant   Plant? @relation(fields: [plantId], references: [id])

  truckId Int?   @unique
  truck   Truck? @relation(fields: [truckId], references: [id])

  trips     Trip[]
  createdAt DateTime @default(now())

  @@index([plantId])
}

model Truck {
  id    Int     @id @default(autoincrement())
  plate String  @unique
  brand String?

  driver    Driver?
  trailerId Int?         @unique
  trailer   DumpTrailer? @relation(fields: [trailerId], references: [id])

  createdAt DateTime @default(now())
}

model DumpTrailer {
  id     Int    @id @default(autoincrement())
  model  String
  volume Float?

  truck Truck?

  createdAt DateTime @default(now())
}

model Trip {
  id       Int @id @default(autoincrement())
  clientId Int
  plantId  Int
  driverId Int

  projectionId Int?

  distance  Int?
  notes     String?
  createdAt DateTime @default(now())

  client     Client      @relation(fields: [clientId], references: [id])
  plant      Plant       @relation(fields: [plantId], references: [id])
  driver     Driver      @relation(fields: [driverId], references: [id])
  projection Projection? @relation(fields: [projectionId], references: [id])

  @@index([clientId])
  @@index([plantId])
  @@index([driverId])
  @@index([createdAt])
}

model Product {
  id       Int    @id @default(autoincrement())
  name     String
  category String
  unit     String

  plantId Int?
  plant   Plant? @relation(fields: [plantId], references: [id])

  clientId Int?
  client   Client? @relation(fields: [clientId], references: [id])

  projections Projection[]
  createdAt   DateTime     @default(now())
}

model Projection {
  id        Int              @id @default(autoincrement())
  name      String
  startDate DateTime
  endDate   DateTime
  status    ProjectionStatus @default(DRAFT)

  plantId     Int
  productId   Int
  createdById Int

  plant     Plant   @relation(fields: [plantId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  createdBy User    @relation("ProjectionCreator", fields: [createdById], references: [id])

  trips     Trip[]
  createdAt DateTime @default(now())

  @@index([plantId])
  @@index([productId])
  @@index([createdById])
  @@index([startDate, endDate])
}
